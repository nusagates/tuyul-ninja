let $ = jQuery
$('body').removeClass('wp-core-ui wp-admin');
var app = new Vue({
    el: "#app",
    data: {
        topic: '',
        suggested_ideas: [],
        selected_ideas: [],
        selected_all: false,
        download_name: 'ideas.txt',
        download_content: '',
        post_category: 1,
        post_tags: '',
        trend_country: 'p1',
        trend_keyword: [],
        selected_keyword: [],
        processing: false
    },
    methods: {
        getIdeas() {
            this.processing = true
            $.ajax({
                url: "https://suggestqueries.google.com/complete/search",
                jsonp: "jsonp",
                dataType: "jsonp",
                data: {
                    q: this.topic,
                    client: "chrome"
                },
                success: (res => {
                    this.processing = false
                    result = res[1]
                    if (result.length < 1) {
                        Swal.fire({
                            title: 'Information',
                            text: 'No ideas found related to ' + this.topic,
                            icon: 'warning'
                        })
                    } else {
                        for (let i = 0; i < result.length; i++) {
                            this.suggested_ideas.push(this.cleanIdea(result[i]))
                        }
                    }
                }),
                err: (err => {
                    this.processing = false
                })
            });
        },
        removeIdea(index) {
            this.suggested_ideas.splice(index, 1);
        },
        selectedAllState() {
            if (this.selected_all) {
                this.selected_ideas = this.suggested_ideas
            } else {
                this.selected_ideas = []
            }
        },
        removeSelectedIdeas() {
            Swal.fire({
                title: 'Confirmation',
                html: "Are you sure want to remove selected ideas?",
                confirmButtonText: `Remove`,
                showCancelButton: true,
                icon: 'warning'
            }).then((result) => {
                if (result.isConfirmed) {
                    let selected_ideas = this.selected_ideas;
                    for (let i = 0; i < selected_ideas.length; i++) {
                        let idea_index = this.suggested_ideas.indexOf(selected_ideas[i]);
                        this.suggested_ideas.splice(idea_index, 1)
                    }
                    this.selected_ideas = []
                }
            })

        },
        downloadSelectedIdeas() {
            let ideas = this.selected_ideas;
            this.download_name = ideas[0] + '.txt'
            let content = ideas.length + ' ideas related to ' + ideas[0] + '\n\n';
            for (let i = 0; i < ideas.length; i++) {
                content += ideas[i] + '\n';
            }
            content += '\n\n'
            content += '===================================================='
            content += '\n\n'
            content += 'This ideas is generated by Tuyul Ninja Plugin\n';
            content += 'PLUGIN URL: https://wordpress.org/plugins/tuyul-ninja/';
            this.download_content = 'data:text/plain;charset=utf-8,' + encodeURIComponent(content);
        },
        openDraftModal() {
            $("#modal-draft").modal('show')
        },
        draftSelectedIdeas() {
            this.processing = true
            let data = new FormData()
            data.append('action', 'tuyul_save_ideas_as_draft')
            data.append('category', this.post_category)
            data.append('tags', this.post_tags)
            data.append('ideas', this.selected_ideas)
            axios.post(ajaxurl, data).then(res => {
                this.processing = false
                if (res.data.code === 200) {
                    Swal.fire({
                        title: 'Success',
                        text: res.data.message,
                        icon: 'success'
                    }).then((res => {
                        let selected_ideas = this.selected_ideas;
                        for (let i = 0; i < selected_ideas.length; i++) {
                            let idea_index = this.suggested_ideas.indexOf(selected_ideas[i]);
                            this.suggested_ideas.splice(idea_index, 1)
                        }
                        this.selected_ideas = []
                        $("#modal-draft").modal('hide')
                    }))
                } else {
                    Swal.fire({
                        title: 'Error',
                        text: res.data,
                        icon: 'error'
                    })
                }
            }).catch(err => {
                Swal.fire({
                    title: 'Error',
                    text: err.text,
                    icon: 'error'
                })
                this.processing = false
            })
        },
        getTrendKeyword() {
            this.processing = true
            let data = new FormData()
            data.append('action', 'tuyul_get_trend_keyword')
            data.append('country', this.trend_country)
            axios.post(ajaxurl, data).then(res => {
                this.processing = false
                if (res.data.code === 200) {
                    this.trend_keyword = res.data.data
                }
            })
        },
        getRelatedKeyword(keyword) {
            this.topic = keyword
            $.ajax({
                url: "https://suggestqueries.google.com/complete/search",
                jsonp: "jsonp",
                dataType: "jsonp",
                data: {
                    q: this.topic,
                    client: "chrome"
                },
                success: (res => {
                    this.processing = false
                    result = res[1]
                    if (result.length < 1) {
                        Swal.fire({
                            title: 'Information',
                            text: 'No ideas found related to ' + this.topic,
                            icon: 'warning'
                        })
                    } else {
                        for (let i = 0; i < result.length; i++) {
                            this.suggested_ideas.push(this.cleanIdea(result[i]))
                        }
                        Swal.fire({
                            title: 'Information',
                            text: 'Ideas related to keyword ' + this.topic+' is ready',
                            icon: 'success'
                        }).then(res=>{
                            $("#content-ideas-tab").tab('show')
                        })
                    }
                }),
                err: (err => {
                    this.processing = false
                })
            });

        },
        cleanIdea(input) {
            var val = input;
            val = val.replace("\\u003cb\\u003e", "");
            val = val.replace("\\u003c\\/b\\u003e", "");
            val = val.replace("\\u003c\\/b\\u003e", "");
            val = val.replace("\\u003cb\\u003e", "");
            val = val.replace("\\u003c\\/b\\u003e", "");
            val = val.replace("\\u003cb\\u003e", "");
            val = val.replace("\\u003cb\\u003e", "");
            val = val.replace("\\u003c\\/b\\u003e", "");
            val = val.replace("\\u0026amp;", "&");
            val = val.replace("\\u003cb\\u003e", "");
            val = val.replace("\\u0026", "");
            val = val.replace("\\u0026#39;", "'");
            val = val.replace("#39;", "'");
            val = val.replace("\\u003c\\/b\\u003e", "");
            val = val.replace("\\u2013", "2013");
            if (val.length > 4 && val.substring(0, 4) == "http") val = "";
            return val;
        }
    },
    mounted() {
    }
})